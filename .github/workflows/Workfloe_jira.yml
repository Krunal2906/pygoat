name: Link Commit to Jira Ticket

on:
  push:
    branches:
      - main  # Triggers when code is pushed to the main branch

jobs:
  link-jira-ticket:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensure Git has history to detect changes

      - name: Debug Commit Message
        run: |
          echo "Commit SHA: ${{ github.sha }}"
          echo "Commit Message: ${{ github.event.head_commit.message }}"

      - name: Extract Jira Ticket ID from Commit Message
        id: extract-ticket
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          JIRA_TICKET=$(echo "$COMMIT_MSG" | grep -oE "\[([A-Z]+-[0-9]+)\]" | tr -d '[]')
          
          if [ -z "$JIRA_TICKET" ]; then
            echo "‚ùå No Jira Ticket ID found in commit message. Failing workflow."
            exit 1  # ‚ùó Force GitHub Actions to FAIL if no Jira ID is provided
          fi
          
          echo "‚úÖ Jira Ticket ID: $JIRA_TICKET"
          echo "jira_ticket=$JIRA_TICKET" >> $GITHUB_ENV

      - name: Validate Jira Ticket
        id: validate-ticket
        env:
          JIRA_DOMAIN: ${{ secrets.JIRA_DOMAIN }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          AUTH_HEADER=$(echo -n "$JIRA_EMAIL:$JIRA_API_TOKEN" | base64 | tr -d '\n')

          echo "üîç Checking if Jira Ticket ${{ env.jira_ticket }} exists..."
          RESPONSE=$(curl --silent --request GET \
            --url "https://$JIRA_DOMAIN/rest/api/3/issue/${{ env.jira_ticket }}" \
            --header "Authorization: Basic $AUTH_HEADER" \
            --header "Accept: application/json")

          # Set failure flag
          FAILURE=false

          # Check if the ticket exists
          if echo "$RESPONSE" | grep -q '"errorMessages"'; then
            echo "‚ùå Jira Ticket ID ${{ env.jira_ticket }} does not exist."
            FAILURE=true
          else
            STATUS=$(echo "$RESPONSE" | jq -r '.fields.status.name')
            echo "üîç Jira Ticket Status: $STATUS"

            # Check if status is "In Progress"
            if [ "$STATUS" != "In Progress" ]; then
              echo "‚ùå Jira Ticket is not In Progress."
              FAILURE=true
            fi
          fi

          # If failure occurred, exit with an error
          if [ "$FAILURE" = true ]; then
            echo "‚ùå Exiting workflow with failure."
            exit 1  # ‚ùó Force GitHub Actions to FAIL
          fi

          echo "‚úÖ Jira Ticket is valid and In Progress."

      - name: Link Commit to Jira Ticket
        env:
          JIRA_DOMAIN: ${{ secrets.JIRA_DOMAIN }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          AUTH_HEADER=$(echo -n "$JIRA_EMAIL:$JIRA_API_TOKEN" | base64 | tr -d '\n')

          echo "üîó Linking commit to Jira Ticket: ${{ env.jira_ticket }}"

          curl --http1.1 --request POST \
            --url "https://$JIRA_DOMAIN/rest/api/3/issue/${{ env.jira_ticket }}/remotelink" \
            --header "Authorization: Basic $AUTH_HEADER" \
            --header "Accept: application/json" \
            --header "Content-Type: application/json" \
            --data '{
              "object": {
                "url": "https://github.com/${{ github.repository }}/commit/${{ github.sha }}",
                "title": "GitHub Commit: ${{ github.sha }}",
                "summary": "Commit linked from GitHub Actions"
              }
            }'

          echo "‚úÖ Commit linked successfully!"
